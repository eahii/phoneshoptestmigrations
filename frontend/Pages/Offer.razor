@page "/offer"
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@using Shared.Models

<h3>Myy puhelimesi!</h3>

<div class="offer-container">
    <div class="mb-3">
        <label class="form-label">Puhelimen merkki:</label>
        <input type="text" class="form-control" @bind="phoneBrand" />
    </div>

    <div class="mb-3">
        <label class="form-label">Puhelimen malli:</label>
        <input type="text" class="form-control" @bind="phoneModel" />
    </div>

    <div class="mb-3">
        <label class="form-label">Alkuperäinen hinta (€):</label>
        <input type="number" class="form-control" min="0" @bind="originalPrice" />
    </div>

    <div class="mb-3">
        <label class="form-label">Puhelimen Ikä (vuosina):</label>
        <input type="number" class="form-control" min="0" @bind="phoneAge" />
    </div>

    <div class="mb-3">
        <label class="form-label">Yleinen Kunto: @overallCondition%</label>
        <input type="range" class="form-range" min="1" max="100" @bind="overallCondition" />
    </div>

    <div class="mb-3">
        <label class="form-label">Akunkesto: @batteryLife%</label>
        <input type="range" class="form-range" min="1" max="100" @bind="batteryLife" />
    </div>

    <div class="mb-3">
        <label class="form-label">Näytön Kunto: @screenCondition%</label>
        <input type="range" class="form-range" min="1" max="100" @bind="screenCondition" />
    </div>

    <div class="mb-3">
        <label class="form-label">Kameran Kunto: @cameraCondition%</label>
        <input type="range" class="form-range" min="1" max="100" @bind="cameraCondition" />
    </div>

    <div class="mb-3">
        <label class="form-label">Uudelleenmyyntiarvo (€):</label>
        <input type="number" class="form-control" min="0" @bind="resellValue" />
    </div>

    <div class="mt-3">
        <button class="btn btn-primary" @onclick="SubmitOffer">Lähetä Arviosi</button>
    </div>
</div>

@code {
    private string phoneBrand;
    private string phoneModel;
    private decimal originalPrice;
    private int phoneAge;
    private int overallCondition = 100;
    private int batteryLife = 100;
    private int screenCondition = 100;
    private int cameraCondition = 100;
    private decimal? resellValue;

    private async Task SubmitOffer()
    {
        try
        {
            var offer = new OfferModel
                {
                    PhoneBrand = phoneBrand,
                    PhoneModel = phoneModel,
                    OriginalPrice = originalPrice,
                    PhoneAge = phoneAge,
                    OverallCondition = overallCondition,
                    BatteryLife = batteryLife,
                    ScreenCondition = screenCondition,
                    CameraCondition = cameraCondition,
                    ResellValue = resellValue,
                    SubmissionDate = DateTime.UtcNow
                };

            var response = await Http.PostAsJsonAsync("/api/offers", offer);
            if (response.IsSuccessStatusCode)
            {
                await JSRuntime.InvokeVoidAsync("alert", "Arviosi lähetettiin vahvistettavaksi!");
                // Clear the form
                ClearForm();
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                await JSRuntime.InvokeVoidAsync("alert", $"Virhe arvioita lähetettäessä: {error}");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Virhe arvioita lähetettäessä: {ex.Message}");
        }
    }

    private void ClearForm()
    {
        phoneBrand = string.Empty;
        phoneModel = string.Empty;
        originalPrice = 0;
        phoneAge = 0;
        overallCondition = 100;
        batteryLife = 100;
        screenCondition = 100;
        cameraCondition = 100;
        resellValue = null;
    }
}